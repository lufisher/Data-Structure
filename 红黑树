//自己实现红黑树的各种算法
//二叉排序树（搜索树）如果插入的是随机数据，效果很好，但是如果是有序数据，则速度很慢，有可能会变成非平衡树
//这个时候，查找时间变成了O(n)，不再是O(logn)
//所以，红黑树是一种平衡树，其实是增加了某些特点的二叉搜索树
//对于红黑树来说，节点都有颜色，分别是红色和黑色，在插入的时候，需要保持这些颜色的规则，规则有：
//1、每一个节点不是红色就是黑色的；
//2、根总是黑色的
//3、如果节点是红色的，那它的子节点必须是黑色的，反之则不一定
//4、从根到叶节点或空子节点的每条路径，必须包含相同数量的黑色节点。这里的空子节点，指的是非叶节点可以接
//子节点的位置，例如就是一个有右子节点的节点的左边位置，或者有左子节点的节点的右边位置
//5、每个叶节点（即空节点NIL）是黑的。对于非空的节点，要当做其都有一个黑的子节点。
 //例如：             14b
	//	      10r             16b
	//	   7b     12b      15r
	//  3r    n n      n  n     n
	//n    n
//在这里，如果有相同的关键字，那会令整个过程变得复杂，为了简单起见，这里不允许有相同的关键字
//为了了解红黑树的特性，先了解红黑树的几个操作
//左旋：
